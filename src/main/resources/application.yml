spring:
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:votacao_db}
      username: ${MONGODB_USERNAME:votacao_user}
      password: ${MONGODB_PASSWORD:votacao_password}
      authentication-database: admin
      uri: mongodb://${MONGODB_USERNAME:votacao_user}:${MONGODB_PASSWORD:votacao_password}@${MONGODB_HOST:localhost}:${MONGODB_PORT:27017}/${MONGODB_DATABASE:votacao_db}?authSource=admin
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
      properties:
        retry.backoff.ms: 1000
    consumer:
      group-id: votacao-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    admin:
      properties:
        bootstrap.servers: ${spring.kafka.bootstrap-servers}
      auto-create: true
      fetch-configs: true
      close-timeout: 10s
      operation-timeout: 30s

server:
  port: 8080

app:
  user-info:
    url: http://localhost:8089

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

user:
  info:
    base-url: https://user-info.herokuapp.com